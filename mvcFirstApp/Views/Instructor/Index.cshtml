@model PaginatedList<Instructor>
@{
    ViewData["Title"] = "Instructors Index";
	Layout = "_MyLayout";
}

<h1>Instructors</h1>

<div class="container-fluid px-4 py-5">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-5 fw-bold text-primary mb-2">Instructors</h1>
                    <p class="text-muted">Manage and view instructor information</p>
                </div>
                <div>
                    <a class="btn btn-primary btn-lg px-4" href=@Url.Action("Add","Instructor")>
                        <i class="fas fa-plus me-2"></i>Add New Instructor
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <span class="input-group-text bg-light border-end-0">
                    <i class="fas fa-search text-muted"></i>
                </span>
                <input type="text" class="form-control border-start-0" placeholder="Search instructors..." id="searchInput">
            </div>
        </div>
        <div class="col-md-3">
            <select class="form-select" id="departmentFilter">
                <option value="">All Departments</option>
                @if (ViewBag.Departments != null)
                {
                    @foreach (var department in (IEnumerable<Department>)ViewBag.Departments)
                    {
                        <option value="@department.Id">@department.Name</option>
                    }
                }
            </select>
        </div>
    </div>

    <!-- Instructors Grid -->
    <div class="row g-4" id="instructorsGrid">
        @foreach (var instructor in Model)
        {
            <div class="col-lg-4 col-md-6 col-sm-12">
                <div class="card h-100 shadow-sm instructor-card" data-department="@(instructor.Department != null ? instructor.Department.Id.ToString() : "")">
                    <div class="card-header bg-gradient-primary text-white p-4">
                        <div class="d-flex align-items-center">
                            <div class="avatar-container me-3">
                                @if (!string.IsNullOrEmpty(instructor.ImageUrl))
                                {
                                    <img src="@instructor.ImageUrl" alt="@instructor.Name" class="avatar rounded-circle" />
                                }
                                else
                                {
                                    <div class="avatar-placeholder rounded-circle d-flex align-items-center justify-content-center">
                                        <i class="fas fa-user text-white"></i>
                                    </div>
                                }
                            </div>
                            <div>
                                <h5 class="card-title mb-1 text-white">@instructor.Name</h5>
                                <p class="card-subtitle mb-0 text-white-50">ID: @instructor.Id</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-4">
                        <div class="instructor-info">
                            <div class="info-item mb-3">
                                <i class="fas fa-envelope text-primary me-2"></i>
                                <span class="text-muted">Email:</span>
                                <div class="fw-medium">@instructor.Email</div>
                            </div>
                            <div class="info-item mb-3">
                                <i class="fas fa-map-marker-alt text-primary me-2"></i>
                                <span class="text-muted">Address:</span>
                                <div class="fw-medium">@(instructor.Address ?? "Not specified")</div>
                            </div>
                            <div class="info-item mb-3">
                                <i class="fas fa-dollar-sign text-success me-2"></i>
                                <span class="text-muted">Salary:</span>
                                <div class="fw-bold text-success">$@instructor.Salary.ToString("N0")</div>
                            </div>
                            <div class="info-item mb-3">
                                <i class="fas fa-building text-primary me-2"></i>
                                <span class="text-muted">Department:</span>
                                <div class="fw-medium">
                                    @if (instructor.Department != null)
                                    {
                                        <span class="badge bg-primary">@instructor.Department.Name</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Not Assigned</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-light p-3">
                        <div class="d-flex gap-2">
                            <a href="@Url.Action("Details", "Instructor", new { id = instructor.Id })"
                               class="btn btn-outline-primary btn-sm flex-fill">
                                <i class="fas fa-eye me-1"></i>View Details
                            </a>
                            <a href="@Url.Action("Edit", "Instructor", new { id = instructor.Id })"
                               class="btn btn-outline-warning btn-sm flex-fill">
                                <i class="fas fa-edit me-1"></i>Edit
                            </a>
                            <button class="btn btn-outline-danger btn-sm" onclick="confirmDelete(@instructor.Id)">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

	<!-- Pagination -->
    <div class="d-flex justify-content-center py-4">
		<nav aria-label="Page navigation">
			<ul class="pagination">
				@if (Model.HasPreviousPage)
				{
					<li class="page-item">
						<a class="page-link" href="?page=@(Model.PageIndex - 1)">Previous</a>
					</li>
				}

				@for (int i = 1; i <= Model.TotalPages; i++)
				{
					<li class="page-item @(i == Model.PageIndex ? "active" : "")">
						<a class="page-link" href="?page=@i">@i</a>
					</li>
				}

				@if (Model.HasNextPage)
				{
					<li class="page-item">
						<a class="page-link" href="?page=@(Model.PageIndex + 1)">Next</a>
					</li>
				}
			</ul>
		</nav>
    </div>
    

    <!-- Empty State -->
    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <div class="empty-state">
                <i class="fas fa-users fa-5x text-muted mb-3"></i>
                <h3 class="text-muted">No Instructors Found</h3>
                <p class="text-muted">Start by adding your first instructor to the system.</p>
                <button class="btn btn-primary mt-3">
                    <i class="fas fa-plus me-2"></i>Add First Instructor
                </button>
            </div>
        </div>
    }
</div>

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .instructor-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: none;
        border-radius: 15px;
        overflow: hidden;
    }

    .instructor-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    .avatar {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border: 3px solid rgba(255,255,255,0.3);
    }

    .avatar-placeholder {
        width: 60px;
        height: 60px;
        background: rgba(255,255,255,0.2);
        border: 3px solid rgba(255,255,255,0.3);
        font-size: 1.5rem;
    }

    .info-item {
        display: flex;
        align-items: flex-start;
        gap: 0.5rem;
    }

    .info-item > div {
        flex: 1;
    }

    .form-control:focus, .form-select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
        transform: translateY(-1px);
    }
</style>

<script>
    // Search functionality
    document.getElementById('searchInput').addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const cards = document.querySelectorAll('.instructor-card');

        cards.forEach(card => {
            const name = card.querySelector('.card-title').textContent.toLowerCase();
            const email = card.querySelector('.instructor-info').textContent.toLowerCase();
            const isVisible = name.includes(searchTerm) || email.includes(searchTerm);

            card.closest('.col-lg-4').style.display = isVisible ? '' : 'none';
        });
    });

    // Department filter functionality
    document.getElementById('departmentFilter').addEventListener('change', function() {
        const selectedDept = this.value;
        const cards = document.querySelectorAll('.instructor-card');
        cards.forEach(card => {
            const cardDept = card.getAttribute('data-department');
            // Show if matches or if 'All Departments' is selected
            const show = !selectedDept || cardDept === selectedDept;
            card.closest('.col-lg-4').style.display = show ? '' : 'none';
        });
    });

    // Delete confirmation
    function confirmDelete(instructorId) {
        if (confirm('Are you sure you want to delete this instructor?')) {
            // Implement delete logic here
            window.location.href = `/Instructor/Delete/${instructorId}`;
        }
    }
</script>