@model List<CourseAllResultsViewModel>

@{
    ViewData["Title"] = Model.Any() ? $"Results - {Model.First().Course.Title}" : "Course Results";
    
    var courseInfo = Model.Any() ? Model.First().Course : new CourseInfoViewModel();
    
    var allTrainees = Model.SelectMany(vm => vm.Results).ToList();
    
    var totalStudents = allTrainees.Count;
    var passCount = allTrainees.Count(t => t.GradeStatus == "Pass");
    var failCount = totalStudents - passCount;
    var averageDegree = allTrainees.Any() ? allTrainees.Average(t => t.Degree) : 0;
    var highestDegree = allTrainees.Any() ? allTrainees.Max(t => t.Degree) : 0;
    var lowestDegree = allTrainees.Any() ? allTrainees.Min(t => t.Degree) : 0;
    var passPercentage = totalStudents > 0 ? (double)passCount / totalStudents * 100 : 0;
    var gradeDistribution = allTrainees.GroupBy(t => t.GradeLetter).ToDictionary(g => g.Key, g => g.Count());
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">

<style>
    .course-results-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: calc(100vh - 76px);
        padding: 2rem 0;
    }
    
    .course-header {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
        padding: 2rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .course-title {
        color: #2d3748;
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 1rem;
        background: linear-gradient(45deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    .course-meta {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-top: 1.5rem;
    }
    
    .meta-item {
        text-align: center;
        padding: 1rem;
        background: linear-gradient(135deg, #f8fafc, #e2e8f0);
        border-radius: 12px;
        border: 1px solid rgba(0, 0, 0, 0.05);
    }
    
    .meta-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: #2d3748;
    }
    
    .meta-label {
        font-size: 0.875rem;
        color: #64748b;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-top: 0.25rem;
    }
    
    .statistics-section {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
        padding: 2rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1.5rem;
    }
    
    .stat-card {
        text-align: center;
        padding: 1.5rem;
        background: linear-gradient(135deg, #f1f5f9, #e2e8f0);
        border-radius: 16px;
        border: 1px solid rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
    }
    
    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }
    
    .stat-icon {
        font-size: 2rem;
        margin-bottom: 0.5rem;
        background: linear-gradient(45deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    .stat-value {
        font-size: 1.75rem;
        font-weight: 700;
        color: #2d3748;
    }
    
    .stat-label {
        font-size: 0.875rem;
        color: #64748b;
        margin-top: 0.25rem;
    }
    
    .filters-section {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
        padding: 1.5rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .filters-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        align-items: end;
    }
    
    .form-group {
        display: flex;
        flex-direction: column;
    }
    
    .form-label {
        font-weight: 600;
        color: #374151;
        margin-bottom: 0.5rem;
        font-size: 0.875rem;
    }
    
    .form-control {
        padding: 0.75rem;
        border: 2px solid #e5e7eb;
        border-radius: 12px;
        font-size: 0.875rem;
        transition: all 0.3s ease;
        background: white;
    }
    
    .form-control:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }
    
    .btn {
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        cursor: pointer;
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
    }
    
    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
    }
    
    .btn-secondary {
        background: #f8fafc;
        color: #64748b;
        border: 2px solid #e2e8f0;
    }
    
    .btn-secondary:hover {
        background: #e2e8f0;
        color: #475569;
    }
    
    .results-section {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        padding: 0;
        overflow: hidden;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .results-header {
        background: linear-gradient(135deg, #2d3748, #4a5568);
        color: white;
        padding: 1.5rem 2rem;
        font-weight: 600;
        font-size: 1.125rem;
    }
    
    .results-grid {
        display: grid;
        gap: 0;
    }
    
    .result-row {
        display: grid;
        grid-template-columns: auto 1fr auto auto auto;
        gap: 1rem;
        padding: 1.5rem 2rem;
        border-bottom: 1px solid #f1f5f9;
        align-items: center;
        transition: all 0.3s ease;
    }
    
    .result-row:hover {
        background: linear-gradient(135deg, #f8fafc, #f1f5f9);
    }
    
    .result-row:last-child {
        border-bottom: none;
    }
    
    .trainee-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid #e2e8f0;
        transition: all 0.3s ease;
    }
    
    .trainee-avatar:hover {
        border-color: #667eea;
        transform: scale(1.1);
    }
    
    .default-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 1.25rem;
    }
    
    .trainee-info h4 {
        margin: 0 0 0.25rem 0;
        font-weight: 600;
        color: #2d3748;
        font-size: 1rem;
    }
    
    .trainee-info p {
        margin: 0;
        color: #64748b;
        font-size: 0.875rem;
    }
    
    .department-badge {
        background: linear-gradient(135deg, #e0e7ff, #c7d2fe);
        color: #3730a3;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        border: 1px solid #c7d2fe;
    }
    
    .grade-badge {
        padding: 0.5rem 1rem;
        border-radius: 12px;
        font-weight: 700;
        font-size: 1rem;
        text-align: center;
        min-width: 60px;
    }
    
    .grade-pass {
        background: linear-gradient(135deg, #d1fae5, #a7f3d0);
        color: #065f46;
        border: 1px solid #a7f3d0;
    }
    
    .grade-fail {
        background: linear-gradient(135deg, #fee2e2, #fecaca);
        color: #991b1b;
        border: 1px solid #fecaca;
    }
    
    .status-badge {
        padding: 0.375rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .status-pass {
        background: linear-gradient(135deg, #d1fae5, #a7f3d0);
        color: #065f46;
        border: 1px solid #a7f3d0;
    }
    
    .status-fail {
        background: linear-gradient(135deg, #fee2e2, #fecaca);
        color: #991b1b;
        border: 1px solid #fecaca;
    }
    
    .no-results {
        text-align: center;
        padding: 4rem 2rem;
        color: #64748b;
    }
    
    .no-results i {
        font-size: 4rem;
        margin-bottom: 1rem;
        opacity: 0.5;
    }
    
    @@media (max-width: 768px) {
        .course-title {
            font-size: 2rem;
        }
        
        .course-meta {
            grid-template-columns: repeat(2, 1fr);
        }
        
        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }
        
        .filters-grid {
            grid-template-columns: 1fr;
        }
        
        .result-row {
            grid-template-columns: 1fr;
            gap: 1rem;
            text-align: center;
        }
        
        .results-header {
            text-align: center;
        }
    }
</style>

<div class="course-results-container">
    <div class="container">
        @if (Model.Any())
        {
            <!-- Course Header -->
            <div class="course-header animate__animated animate__fadeInDown">
                <h1 class="course-title">
                    <i class="fas fa-graduation-cap"></i>
                    @courseInfo.Title
                </h1>
                
                <div class="course-meta">
                    <div class="meta-item">
                        <div class="meta-value">@courseInfo.Credits</div>
                        <div class="meta-label">Credits</div>
                    </div>
                    <div class="meta-item">
                        <div class="meta-value">@courseInfo.Degree</div>
                        <div class="meta-label">Max Degree</div>
                    </div>
                    <div class="meta-item">
                        <div class="meta-value">@courseInfo.MinDegree</div>
                        <div class="meta-label">Min Pass</div>
                    </div>
                    <div class="meta-item">
                        <div class="meta-value">@totalStudents</div>
                        <div class="meta-label">Students</div>
                    </div>
                </div>
                
                <div style="margin-top: 1.5rem; color: #64748b;">
                    <p><strong>Department:</strong> @courseInfo.DepartmentName</p>
                    <p><strong>Instructor:</strong> @courseInfo.InstructorName</p>
                </div>
            </div>

            <!-- Statistics Section -->
            <div class="statistics-section animate__animated animate__fadeInUp">
                <h2 style="color: #2d3748; margin-bottom: 1.5rem; font-size: 1.5rem;">
                    <i class="fas fa-chart-bar"></i> Course Statistics
                </h2>
                
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div class="stat-value">@averageDegree.ToString("F1")</div>
                        <div class="stat-label">Average</div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-trophy"></i>
                        </div>
                        <div class="stat-value">@highestDegree</div>
                        <div class="stat-label">Highest</div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-arrow-down"></i>
                        </div>
                        <div class="stat-value">@lowestDegree</div>
                        <div class="stat-label">Lowest</div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="stat-value">@passCount</div>
                        <div class="stat-label">Passed</div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-times-circle"></i>
                        </div>
                        <div class="stat-value">@failCount</div>
                        <div class="stat-label">Failed</div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-percentage"></i>
                        </div>
                        <div class="stat-value">@passPercentage.ToString("F1")%</div>
                        <div class="stat-label">Pass Rate</div>
                    </div>
                </div>
            </div>

            <!-- Filters Section -->
            <div class="filters-section animate__animated animate__fadeInLeft">
                <form method="get" asp-action="GetTraineesResults">
                    <input type="hidden" name="Id" value="@courseInfo.Id" />
                    
                    <div class="filters-grid">
                        <div class="form-group">
                            <label class="form-label">Search Students</label>
                            <input class="form-control" name="searchTerm" placeholder="Name or email..." />
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Sort By</label>
                            <select class="form-control" name="sortBy">
                                <option value="Name">Name</option>
                                <option value="Degree">Grade</option>
                                <option value="Email">Email</option>
                                <option value="Department">Department</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Direction</label>
                            <select class="form-control" name="sortDirection">
                                <option value="asc">Ascending</option>
                                <option value="desc">Descending</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Min Grade</label>
                            <input type="number" class="form-control" name="minDegree" placeholder="0" />
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Max Grade</label>
                            <input type="number" class="form-control" name="maxDegree" placeholder="100" />
                        </div>
                        
                        <div style="display: flex; gap: 0.5rem;">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search"></i>
                                Filter
                            </button>
                            <a href="@Url.Action("GetTraineesResults", new { Id = courseInfo.Id })" class="btn btn-secondary">
                                <i class="fas fa-undo"></i>
                                Reset
                            </a>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Results Section -->
            <div class="results-section animate__animated animate__fadeInRight">
                <div class="results-header">
                    <i class="fas fa-users"></i>
                    Student Results (@totalStudents students)
                </div>
                
                <div class="results-grid">
                    @foreach (var trainee in allTrainees)
                    {
                        <div class="result-row">
                            <div>
                                @if (!string.IsNullOrEmpty(trainee.ImageUrl))
                                {
                                    <img src="@trainee.ImageUrl" alt="@trainee.Name" class="trainee-avatar" />
                                }
                                else
                                {
                                    <div class="default-avatar">
                                        @trainee.Name.Substring(0, 1).ToUpper()
                                    </div>
                                }
                            </div>
                            
                            <div class="trainee-info">
                                <h4>@trainee.Name</h4>
                                <p>@trainee.Email</p>
                                @if (trainee.Age > 0)
                                {
                                    <p style="font-size: 0.75rem; color: #9ca3af;">Age: @trainee.Age</p>
                                }
                            </div>
                            
                            <div>
                                <span class="department-badge">@trainee.DepartmentName</span>
                            </div>
                            
                            <div>
                                <div class="grade-badge @(trainee.GradeStatus == "Pass" ? "grade-pass" : "grade-fail")">
                                    @trainee.Degree
                                </div>
                                @if (!string.IsNullOrEmpty(trainee.GradeLetter))
                                {
                                    <div style="text-align: center; margin-top: 0.25rem; font-size: 0.75rem; color: #64748b;">
                                        Grade @trainee.GradeLetter
                                    </div>
                                }
                            </div>
                            
                            <div>
                                <span class="status-badge @(trainee.GradeStatus == "Pass" ? "status-pass" : "status-fail")">
                                    @trainee.GradeStatus
                                </span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="no-results">
                <i class="fas fa-search"></i>
                <h3>No Results Found</h3>
                <p>No students found for this course.</p>
            </div>
        }
    </div>
</div>

<script>
    // Add smooth scrolling and enhanced interactions
    document.addEventListener('DOMContentLoaded', function() {
        // Add loading animation to form submission
        const form = document.querySelector('form');
        if (form) {
            form.addEventListener('submit', function() {
                const button = form.querySelector('button[type="submit"]');
                if (button) {
                    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Filtering...';
                    button.disabled = true;
                }
            });
        }
        
        // Add hover effects to result rows
        const resultRows = document.querySelectorAll('.result-row');
        resultRows.forEach(row => {
            row.addEventListener('mouseenter', function() {
                this.style.transform = 'translateX(5px)';
            });
            
            row.addEventListener('mouseleave', function() {
                this.style.transform = 'translateX(0)';
            });
        });
        
        // Auto-focus search input
        const searchInput = document.querySelector('input[name="searchTerm"]');
        if (searchInput && !searchInput.value) {
            searchInput.focus();
        }
    });
</script>