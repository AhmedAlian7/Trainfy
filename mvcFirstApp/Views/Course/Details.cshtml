@model Course
@{
    ViewData["Title"] = "Course Details - " + Model.Title;
    Layout = "_MyLayout";
}

<div class="container-fluid px-4 py-5">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "Course")" class="text-decoration-none">
                                    <i class="fas fa-graduation-cap me-1"></i>Courses
                                </a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">Course Details</li>
                        </ol>
                    </nav>
                    <h1 class="display-5 fw-bold text-primary mb-0">@Model.Title</h1>
                    <p class="text-muted mb-0">Course ID: @Model.Id</p>
                </div>
                <div class="d-flex gap-2">
                    <a href="@Url.Action("Edit", "Course", new { id = Model.Id })"
                       class="btn btn-warning btn-lg">
                        <i class="fas fa-edit me-2"></i>Edit Course
                    </a>
                    <a href="@Url.Action("GetTraineesResults", "Course", new { courseId = Model.Id })"
                       class="btn btn-info btn-lg">
                        <i class="fas fa-chart-bar me-2"></i>View Results
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="row g-4">
        <!-- Course Information Card -->
        <div class="col-lg-8">
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-header bg-gradient-primary text-white p-4">
                    <div class="d-flex align-items-center">
                        <div class="course-icon-large rounded-circle d-flex align-items-center justify-content-center me-4">
                            <i class="fas fa-graduation-cap text-white"></i>
                        </div>
                        <div>
                            <h3 class="card-title mb-1 text-white">Course Information</h3>
                            <p class="card-subtitle mb-0 text-white-50">Detailed course specifications and requirements</p>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <div class="row g-4">
                        <div class="col-md-6">
                            <div class="info-group">
                                <div class="info-item p-3 bg-light rounded-3 mb-3">
                                    <div class="d-flex align-items-center">
                                        <div class="info-icon bg-primary rounded-circle d-flex align-items-center justify-content-center me-3">
                                            <i class="fas fa-award text-white"></i>
                                        </div>
                                        <div>
                                            <label class="form-label text-muted mb-1">Credits</label>
                                            <div class="fs-4 fw-bold text-primary">@Model.Credits</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="info-group">
                                <div class="info-item p-3 bg-light rounded-3 mb-3">
                                    <div class="d-flex align-items-center">
                                        <div class="info-icon bg-info rounded-circle d-flex align-items-center justify-content-center me-3">
                                            <i class="fas fa-chart-line text-white"></i>
                                        </div>
                                        <div>
                                            <label class="form-label text-muted mb-1">Degree Level</label>
                                            <div class="fs-4 fw-bold text-info">@Model.Degree</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="info-group">
                                <div class="info-item p-3 bg-light rounded-3 mb-3">
                                    <div class="d-flex align-items-center">
                                        <div class="info-icon bg-warning rounded-circle d-flex align-items-center justify-content-center me-3">
                                            <i class="fas fa-level-down-alt text-white"></i>
                                        </div>
                                        <div>
                                            <label class="form-label text-muted mb-1">Minimum Degree Required</label>
                                            <div class="fs-4 fw-bold text-warning">@Model.MinDegree</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="info-group">
                                <div class="info-item p-3 bg-light rounded-3 mb-3">
                                    <div class="d-flex align-items-center">
                                        <div class="info-icon bg-secondary rounded-circle d-flex align-items-center justify-content-center me-3">
                                            <i class="fas fa-hashtag text-white"></i>
                                        </div>
                                        <div>
                                            <label class="form-label text-muted mb-1">Course ID</label>
                                            <div class="fs-4 fw-bold text-secondary">@Model.Id</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Assignment Information -->
        <div class="col-lg-4">
            <!-- Department Card -->
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-header bg-primary text-white p-3">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-building me-2"></i>Department
                    </h5>
                </div>
                <div class="card-body p-4 text-center">
                    @if (Model.Department != null)
                    {
                        <div class="department-info">
                            <div class="department-icon bg-primary bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center mx-auto mb-3">
                                <i class="fas fa-building text-primary fa-2x"></i>
                            </div>
                            <h4 class="fw-bold text-primary mb-2">@Model.Department.Name</h4>
                            <span class="badge bg-primary px-3 py-2">Department ID: @Model.DepartmentId</span>
                        </div>
                    }
                    else
                    {
                        <div class="text-center">
                            <div class="department-icon bg-secondary bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center mx-auto mb-3">
                                <i class="fas fa-question text-secondary fa-2x"></i>
                            </div>
                            <h5 class="text-muted mb-2">Not Assigned</h5>
                            <span class="badge bg-secondary px-3 py-2">No Department</span>
                        </div>
                    }
                </div>
            </div>

            <!-- Instructor Card -->
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-header bg-success text-white p-3">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-user-tie me-2"></i>Instructor
                    </h5>
                </div>
                <div class="card-body p-4 text-center">
                    @if (Model.Instructor != null)
                    {
                        <div class="instructor-info">
                            <div class="col-md-4 text-center">
                                @if (!string.IsNullOrEmpty(Model.Instructor.ImageUrl))
                                {
                                    <img src="@Model.Instructor.ImageUrl" alt="@Model.Instructor.Name" class="img-thumbnail rounded-circle d-flex align-items-center justify-content-center" style="max-width: 80px; max-height: 80px;" />
                                }
                                else
                                {
                                    <div class="avatar-placeholder rounded-circle d-flex align-items-center justify-content-center" style="width:180px;height:180px;background:#eee;font-size:3rem;">
                                        <i class="fas fa-user text-primary"></i>
                                    </div>
                                }
                            </div>
                            <h4 class="fw-bold text-success mb-2">@Model.Instructor.Name</h4>
                            <span class="badge bg-success px-3 py-2">Instructor ID: @Model.InstructorId</span>
                        </div>
                    }
                    else
                    {
                        <div class="text-center">
                            <div class="instructor-avatar bg-secondary bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center mx-auto mb-3">
                                <i class="fas fa-user-slash text-secondary fa-2x"></i>
                            </div>
                            <h5 class="text-muted mb-2">Not Assigned</h5>
                            <span class="badge bg-secondary px-3 py-2">No Instructor</span>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Course Results Summary -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-gradient-info text-white p-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h3 class="card-title mb-1 text-white">Course Results Overview</h3>
                            <p class="card-subtitle mb-0 text-white-50">Summary of student performance in this course</p>
                        </div>
                        <a href="@Url.Action("GetTraineesResults", "Course", new { courseId = Model.Id })"
                           class="btn btn-light btn-lg">
                            <i class="fas fa-chart-line me-2"></i>View Detailed Results
                        </a>
                    </div>
                </div>
                <div class="card-body p-4">
                    @if (Model.CourseResults != null && Model.CourseResults.Any())
                    {
                        <div class="row g-4">
                            <div class="col-md-3">
                                <div class="stats-card bg-primary bg-opacity-10 p-4 rounded-3 text-center">
                                    <div class="stats-icon text-primary mb-2">
                                        <i class="fas fa-users fa-2x"></i>
                                    </div>
                                    <h3 class="fw-bold text-primary mb-1">@Model.CourseResults.Count()</h3>
                                    <p class="text-muted mb-0">Total Students</p>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="stats-card bg-success bg-opacity-10 p-4 rounded-3 text-center">
                                    <div class="stats-icon text-success mb-2">
                                        <i class="fas fa-check-circle fa-2x"></i>
                                    </div>
                                    <h3 class="fw-bold text-success mb-1">@Model.CourseResults.Count(r => r.Degree >= r.Course?.Degree)</h3>
                                    <p class="text-muted mb-0">Passed</p>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="stats-card bg-danger bg-opacity-10 p-4 rounded-3 text-center">
                                    <div class="stats-icon text-danger mb-2">
                                        <i class="fas fa-times-circle fa-2x"></i>
                                    </div>
                                    <h3 class="fw-bold text-danger mb-1">@Model.CourseResults.Count(r => r.Degree < r.Course?.Degree)</h3>
                                    <p class="text-muted mb-0">Failed</p>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="stats-card bg-info bg-opacity-10 p-4 rounded-3 text-center">
                                    <div class="stats-icon text-info mb-2">
                                        <i class="fas fa-percentage fa-2x"></i>
                                    </div>
                                    <h3 class="fw-bold text-info mb-1">@((Model.CourseResults.Count() > 0 ? (Model.CourseResults.Count(r => r.Degree >= r.Course?.Degree) * 100.0 / Model.CourseResults.Count()).ToString("F1") : "0"))%</h3>
                                    <p class="text-muted mb-0">Pass Rate</p>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="empty-state">
                                <i class="fas fa-chart-bar fa-4x text-muted mb-3"></i>
                                <h4 class="text-muted mb-2">No Results Available</h4>
                                <p class="text-muted">No student results have been recorded for this course yet.</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="d-flex gap-3 justify-content-center">
                <a href="@Url.Action("Index", "Course")" class="btn btn-secondary btn-lg">
                    <i class="fas fa-arrow-left me-2"></i>Back to Courses
                </a>
                <a href="@Url.Action("Edit", "Course", new { id = Model.Id })" class="btn btn-warning btn-lg">
                    <i class="fas fa-edit me-2"></i>Edit Course
                </a>
                <a href="@Url.Action("GetTraineesResults", "Course", new { courseId = Model.Id })" class="btn btn-info btn-lg">
                    <i class="fas fa-chart-bar me-2"></i>View Results
                </a>
                <button class="btn btn-danger btn-lg" onclick="confirmDelete(@Model.Id)">
                    <i class="fas fa-trash me-2"></i>Delete Course
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .bg-gradient-info {
        background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
    }

    .course-icon-large {
        width: 80px;
        height: 80px;
        background: rgba(255,255,255,0.2);
        border: 3px solid rgba(255,255,255,0.3);
        font-size: 2rem;
    }

    .info-icon {
        width: 50px;
        height: 50px;
        font-size: 1.2rem;
    }

    .department-icon,
    .instructor-avatar {
        width: 80px;
        height: 80px;
    }

    .stats-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid rgba(0,0,0,0.05);
    }

        .stats-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .card {
        border-radius: 15px;
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

    .breadcrumb-item a {
        color: #667eea;
    }

        .breadcrumb-item a:hover {
            color: #764ba2;
        }

    .btn {
        border-radius: 10px;
        transition: all 0.3s ease;
    }

        .btn:hover {
            transform: translateY(-1px);
        }

    .badge {
        font-size: 0.85rem;
    }

    .info-item {
        transition: all 0.3s ease;
    }

        .info-item:hover {
            background-color: #f8f9fa !important;
            transform: translateY(-1px);
        }
</style>

<script>
    // Delete confirmation
    function confirmDelete(courseId) {
        if (confirm('Are you sure you want to delete this course? This action cannot be undone.')) {
            window.location.href = `/Course/Delete/${courseId}`;
        }
    }

    // Add some interactive animations
    document.addEventListener('DOMContentLoaded', function() {
        // Animate stats cards on scroll
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        // Observe stats cards
        document.querySelectorAll('.stats-card').forEach(card => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            observer.observe(card);
        });
    });
</script>