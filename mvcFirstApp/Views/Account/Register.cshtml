@model mvcFirstApp.ViewModels.RegisterViewModel
@{
    ViewData["Title"] = "Register";
    Layout = null;
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
    }
    .login-container {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        padding: 40px;
        width: 100%;
        max-width: 480px;
        position: relative;
        overflow: hidden;
        transition: transform 0.3s ease;
    }
    .login-container:hover {
        transform: translateY(-5px);
    }
    .login-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #667eea, #764ba2, #f093fb);
        background-size: 200% 100%;
        animation: gradient 3s ease infinite;
    }
    .login-header {
        text-align: center;
        margin-bottom: 30px;
    }
    .login-header h1 {
        color: #333;
        font-size: 2.2rem;
        font-weight: 700;
        margin-bottom: 8px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    .login-header p {
        color: #666;
        font-size: 0.95rem;
        font-weight: 400;
    }
    .form-group {
        margin-bottom: 24px;
        position: relative;
    }
    .form-group label {
        display: block;
        margin-bottom: 8px;
        color: #333;
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    .form-control {
        width: 100%;
        padding: 16px 20px;
        border: 2px solid #e1e5e9;
        border-radius: 12px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: #f8f9fa;
        outline: none;
    }
    .form-control:focus {
        border-color: #667eea;
        background: white;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        transform: translateY(-1px);
    }
    .form-control:hover {
        border-color: #bdc3c7;
    }
    .btn-login {
        width: 100%;
        padding: 16px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 12px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        position: relative;
        overflow: hidden;
    }
    .btn-login:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
    }
    .btn-login:active {
        transform: translateY(0);
    }
    .btn-login::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }
    .btn-login:hover::before {
        left: 100%;
    }
    .text-danger {
        color: #e74c3c;
        font-size: 0.85rem;
        margin-top: 5px;
        display: block;
        animation: shake 0.5s ease-in-out;
    }
    .back-link {
        text-align: center;
        margin-top: 24px;
    }
    .back-link a {
        color: #667eea;
        text-decoration: none;
        font-weight: 500;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        position: relative;
    }
    .back-link a:hover {
        color: #764ba2;
    }
    .back-link a::after {
        content: '';
        position: absolute;
        width: 0;
        height: 2px;
        bottom: -3px;
        left: 50%;
        background: linear-gradient(90deg, #667eea, #764ba2);
        transition: all 0.3s ease;
        transform: translateX(-50%);
    }
    .back-link a:hover::after {
        width: 100%;
    }
    .btn-login.loading {
        pointer-events: none;
        opacity: 0.7;
    }
    .btn-login.loading::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 20px;
        height: 20px;
        margin: -10px 0 0 -10px;
        border: 2px solid transparent;
        border-top: 2px solid #fff;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }
</style>

<div class="login-container">
    <div class="login-header">
        <h1>Create Account</h1>
        <p>Register a new account to get started</p>
    </div>
    <form asp-action="Register" id="registerForm">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="FullName" class="control-label">Full Name</label>
            <input asp-for="FullName" class="form-control" placeholder="Enter your full name" />
            <span asp-validation-for="FullName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="UserName" class="control-label">Username</label>
            <input asp-for="UserName" class="form-control" placeholder="Choose a username" autocomplete="username" />
            <span asp-validation-for="UserName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Email" class="control-label">Email</label>
            <input asp-for="Email" class="form-control" placeholder="Enter your email" autocomplete="email" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Password" class="control-label">Password</label>
            <input asp-for="Password" type="password" class="form-control" placeholder="Create a password" autocomplete="new-password" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ConfirmPassword" class="control-label">Confirm Password</label>
            <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Confirm your password" autocomplete="new-password" />
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>
        <div class="form-group form-check">
            <input asp-for="AgreeToTerms" class="form-check-input" id="agreeToTerms" type="checkbox" />
            <label class="form-check-label" asp-for="AgreeToTerms">
                I agree to the <a href="/Home/Terms" target="_blank">Terms of Service</a> and <a href="/Home/Privacy" target="_blank">Privacy Policy</a>
            </label>
            <span asp-validation-for="AgreeToTerms" class="text-danger" id="termsError"></span>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-login" id="registerBtn">
                Create Account
            </button>
        </div>
    </form>
    <div class="back-link">
        <a asp-action="Login">Already have an account? Sign in</a>
    </div>
</div>

<script>
    // Add loading animation to submit button
    document.getElementById('registerForm').addEventListener('submit', function() {
        const btn = document.getElementById('registerBtn');
        btn.classList.add('loading');
        btn.textContent = 'Creating...';
    });
    // Add focus effects
    document.querySelectorAll('.form-control').forEach(input => {
        input.addEventListener('focus', function() {
            this.parentElement.style.transform = 'scale(1.02)';
        });
        input.addEventListener('blur', function() {
            this.parentElement.style.transform = 'scale(1)';
        });
    });
    // Smooth validation error animations
    document.querySelectorAll('.text-danger').forEach(error => {
        if (error.textContent.trim()) {
            error.style.display = 'block';
            error.style.animation = 'shake 0.5s ease-in-out';
        }
    });
    // Real-time validation for AgreeToTerms
    const agreeToTerms = document.getElementById('agreeToTerms');
    const registerBtn = document.getElementById('registerBtn');
    const termsError = document.getElementById('termsError');
    agreeToTerms.addEventListener('change', function() {
        if (!this.checked) {
            termsError.textContent = 'You must agree to the terms and conditions';
            registerBtn.disabled = true;
        } else {
            termsError.textContent = '';
            registerBtn.disabled = false;
        }
    });
    // On page load, disable button if not checked
    if (!agreeToTerms.checked) {
        registerBtn.disabled = true;
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
